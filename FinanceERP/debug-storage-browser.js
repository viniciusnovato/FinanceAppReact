// Script para verificar AsyncStorage no navegador
console.log('üîç === VERIFICANDO ASYNCSTORAGE ===');

// Fun√ß√£o para verificar AsyncStorage
async function checkAsyncStorage() {
  try {
    // Importar AsyncStorage (simula√ß√£o para web)
    const AsyncStorage = require('@react-native-async-storage/async-storage').default;
    
    console.log('üì± Verificando tokens armazenados...');
    
    const token = await AsyncStorage.getItem('auth_token');
    const userData = await AsyncStorage.getItem('user_data');
    
    console.log('üîë Token encontrado:', !!token);
    console.log('üîë Token length:', token?.length || 0);
    if (token) {
      console.log('üîë Token preview:', token.substring(0, 50) + '...');
    }
    
    console.log('üë§ User data encontrado:', !!userData);
    if (userData) {
      try {
        const parsedUser = JSON.parse(userData);
        console.log('üë§ User email:', parsedUser.email);
        console.log('üë§ User name:', parsedUser.name);
      } catch (e) {
        console.log('üë§ Erro ao parsear user data:', e.message);
      }
    }
    
    // Listar todas as chaves
    console.log('üìã Todas as chaves no AsyncStorage:');
    const allKeys = await AsyncStorage.getAllKeys();
    console.log('üìã Keys:', allKeys);
    
    // Obter todos os valores
    if (allKeys.length > 0) {
      const allValues = await AsyncStorage.multiGet(allKeys);
      console.log('üìã Todos os valores:');
      allValues.forEach(([key, value]) => {
        console.log(`üìã ${key}:`, value ? (value.length > 100 ? value.substring(0, 100) + '...' : value) : 'null');
      });
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar AsyncStorage:', error);
  }
}

// Executar verifica√ß√£o
checkAsyncStorage();
